name: Build and Deploy to S3

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 작동 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - run: touch ./.env
    - run: echo "${{ secrets.ENVIRONMENT }}" > ./.env
    - run: cat ./.env

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'  # 필요한 Node.js 버전을 설정

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run:  CI=false && npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2  # 사용하는 AWS 리전을 설정

    - name: Backup images folder from S3
      run: aws s3 cp s3://project-popcon-react/image/ /tmp/image/ --recursive
    - name: Sync S3 Bucket
      run: |
        aws s3 sync build/ s3://project-popcon-react --delete --exclude "image/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Restore images folder to S3
      run: aws s3 cp /tmp/image/ s3://project-popcon-react/image/ --recursive
    - name: Invalidate CloudFront distribution
      run: |
        aws cloudfront create-invalidation --distribution-id  ${{ env.DISTRIBUTION_ID }} --paths "/*"
      env:
        DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
